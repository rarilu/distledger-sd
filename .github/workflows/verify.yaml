name: Java CI

on:
  push:
    branches: [ master ]
    paths: [ '**.java', '**.groovy', '.github/workflows/verify.yaml' ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  verify:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Verify with Maven
        run: mvn --batch-mode --update-snapshots -Dstyle.color=always verify

      - name: Upload JaCoCo coverage reports
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-site
          path: CoverageReport/target/site

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: CoverageReport/target/site/jacoco-merged/jacoco.csv
          generate-summary: true

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit the badge to master (if it changed)
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          if [[ `git status --porcelain *.svg *.json` ]]; then
            git config --global user.name "github-actions"
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add *.svg *.json
            git commit -m "chore: generate JaCoCo coverage badge"
            git push
          fi
          
      - name: Comment on PR with coverage percentages
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          REPORT=$(<.github/badges/coverage-summary.json)
          COVERAGE=$(jq -r '.coverage*100|round/100' <<< "$REPORT")%
          BRANCHES=$(jq -r '.branches*100|round/100' <<< "$REPORT")%
          NEWLINE=$'\n'
          BODY="## JaCoCo Test Coverage Summary Statistics${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
          gh pr comment ${{github.event.pull_request.number}} -b "${BODY}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}