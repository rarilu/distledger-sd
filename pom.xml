<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>pt.tecnico.sdis.2023.A02</groupId>
	<artifactId>DistLedger</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<!-- Modules are subcomponents of the project. 
		The reactor collects all the available modules to build;
		sorts the projects into the correct build order;
		builds the selected projects in order. -->
	<modules>
		<module>Contract</module>
		<module>Utils</module>
		<module>User</module>
		<module>Admin</module>
		<module>DistLedgerServer</module>
		<module>CoverageReport</module>

		<!-- This one should only be used in phases 2 and 3
		 <module>NamingServer</module>-->
	</modules>

	<!-- Properties are variables used to customize the behavior of Maven and its plug-ins. -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<version.java>17</version.java>

		<version.exec-maven-plugin>3.0.0</version.exec-maven-plugin>
		<version.fmt-maven-plugin>2.19</version.fmt-maven-plugin>
		<version.gmavenplus-plugin>2.0.0</version.gmavenplus-plugin>
		<version.grpc>1.36.0</version.grpc>
		<version.grpcmock>0.5.2</version.grpcmock><!-- aligned with the gRPC dependency version -->
		<version.jacoco-maven-plugin>0.8.8</version.jacoco-maven-plugin>
		<version.javax.annotation-api>1.3.2</version.javax.annotation-api>
		<version.maven-checkstyle-plugin>3.2.1</version.maven-checkstyle-plugin>
		<version.maven-compiler-plugin>3.8.1</version.maven-compiler-plugin>
		<version.maven-enforcer-plugin>1.4.1</version.maven-enforcer-plugin>
		<version.maven-failsafe-plugin>3.0.0-M9</version.maven-failsafe-plugin>
		<version.maven-surefire-plugin>3.0.0-M9</version.maven-surefire-plugin>
		<version.protobuf-maven-plugin>0.6.1</version.protobuf-maven-plugin>
		<version.protoc>3.12.0</version.protoc><!-- aligned with the gRPC dependency version -->
		<version.spock-core>2.3-groovy-4.0</version.spock-core>
		<version.byte-buddy>1.14.0</version.byte-buddy>
	</properties>

	<!-- Dependencies are code archives - JARs - 
	on which your current module needs in order to compile, build, test, and/or to run. 
	When you execute a goal, these dependencies are resolved, and 
	are then loaded from the local repository. -->
	<dependencies>
		<!-- testing framework -->
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>${version.spock-core}</version>
			<scope>test</scope>
		</dependency>
		<!-- gRPC stub mocking -->
		<dependency>
			<groupId>org.grpcmock</groupId>
			<artifactId>grpcmock-junit5</artifactId>
			<version>${version.grpcmock}</version>
			<scope>test</scope>
		</dependency>
		<!-- used to generate mock code -->
		<dependency>
			<groupId>net.bytebuddy</groupId>
			<artifactId>byte-buddy</artifactId>
			<version>${version.byte-buddy}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
	<!-- Plug-ins allow for the reuse of common build logic across multiple projects. 
	They do this by executing an "action" in the context of a project's description. -->
		<plugins>
			<!-- Plug-in used to compile the sources of your project. Java 9 requires 
				at least version 3.7.0 to properly handle modules. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.maven-compiler-plugin}</version>
				<configuration>
					<source>${version.java}</source>
					<target>${version.java}</target>
				</configuration>
			</plugin>
			<!-- Plugin that compiles the tests -->
			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>${version.gmavenplus-plugin}</version>
				<executions>
					<execution>
						<?m2e execute onConfiguration?>
						<goals>
							<goal>compileTests</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- The Surefire plug-in runs integration tests. -->
			<plugin>
		  		<groupId>org.apache.maven.plugins</groupId>
		  		<artifactId>maven-surefire-plugin</artifactId>
		  		<version>${version.maven-surefire-plugin}</version>
			</plugin>
			<!-- The Failsafe plug-in runs integration tests. -->
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${version.maven-failsafe-plugin}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- The Jacoco plug-in creates coverage reports. -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${version.jacoco-maven-plugin}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-prepare-agent-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>merge-unit-and-it</id>
    					<phase>post-integration-test</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>jacoco.exec</include>
										<include>jacoco-it.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/jacoco-merged.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>default-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report-integration</id>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>report-merged</id>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-merged.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-merged</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Plug-in for verifying formatting according to google's code styleguide -->
			<plugin>
				<groupId>com.spotify.fmt</groupId>
				<artifactId>fmt-maven-plugin</artifactId>
				<version>${version.fmt-maven-plugin}</version>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Plug-in for verifying checkstyle -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${version.maven-checkstyle-plugin}</version>
				<configuration>
					<sourceDirectories>
						<sourceDirectory>${project.build.sourceDirectory}</sourceDirectory> 
						<sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory> 
					</sourceDirectories>
					<configLocation>google_checks.xml</configLocation>
					<violationSeverity>warning</violationSeverity>
					<failsOnError>true</failsOnError>
					<failOnViolation>false</failOnViolation>
				</configuration>
				<executions>
					<execution>
						<id>verify</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
